@model ContosoUniversity.Models.SchoolViewModels.InstrucotrIndexData

@{
    ViewData["Title"] = "Index";
}

@section CSS{

    @*<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" />*@
    <link href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap4.min.css" rel="stylesheet" />

}
@section Scripts{

    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js" rel="stylesheet"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js" rel="stylesheet"></script>
    <script>
        $(function () {
            $('#tablesorted').DataTable({
                "columnDefs": [
                    { "orderable": false, "targets": -1 },
                ],
                "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]]
            });

            //store scroll position and rest after page reload
            $.fn.scrollPosReload = function () {
                if (localStorage) {
                    var posReader = localStorage["posStorage"];
                    if (posReader) {
                        $('html, body').animate({ scrollTop: posReader }, 600);//scroll with animation to that window position 
                        localStorage.removeItem("posStorage")//clear localStorage
                    }
                    $(this).click(function (e) {
                        localStorage["posStorage"] = $(window).scrollTop();

                    });
                    return true;

                }
                return false;
            };//end of scrollPosReload

            //Call the function (by using a css class called scroll)
            $('.scroll').scrollPosReload();
        });

    </script>
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-primary"><i class="fas fa-plus"></i> Create New</a>
</p>
<div class="table-responsive">
    <table id="tablesorted" class="table table-bordered">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Hire Date
                </th>
                <th>
                    Email
                </th>
                <th>
                    Office
                </th>
                <th>
                    Courses
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Instructors)
            {
                string selectedRow = "";
                if(item.ID == (int?)ViewData["InstrutorID"])
                {
                    selectedRow = "table-active";
                }
                <tr class="@selectedRow">
                    <td>
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HireDate)
                    </td>
                    <td>
                        @Html.DisplayTextFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OfficeAssignment.Location)
                    </td>
                    <td>
                        @{
                            foreach (var course in item.Courses)
                            {
                                @course.Course.CourseIDTitle<br />
                            }
                        }
                    </td>
                    <td class="ico text-nowrap">
                        <a class="ico-Primary scroll" title="Courses" asp-action="Index" asp-route-id="@item.ID"><i class="fas fa-list"></i></a>
                        <a class="ico-success" title="Edit" asp-action="Edit" asp-route-id="@item.ID"><i class="fas fa-edit"></i></a>
                        <a class="ico-info" title="Details" asp-action="Details" asp-route-id="@item.ID"><i class="fas fa-search-plus"></i></a>
                        <a class="ico-danger" title="Delete" asp-action="Delete" asp-route-id="@item.ID"><i class="fas fa-trash-alt"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.Courses != null)
{
    if (Model.Courses.Count() == 0)
    {
        <h3 class="mt-2">@ViewData["InstructorName"] does not teach any courses yet</h3>
    }
    else
    {
        <h3 class="mt-2">Courses Taught by: @ViewData["InstructorName"] </h3>
        <div class="table-responsive">
            <table class="table table-borderd">
                <thead>
                    <tr>
                        <th>

                        </th>
                        <th>
                            Course Number
                        </th>
                        <th>
                            Title
                        </th>
                        <th>
                            Department
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Courses)
                    {
                        string selectedRow = "";
                        if(item.CourseID == (int?)ViewData["InstrutorID"])
                        {
                            selectedRow = "table-active";
                        }
                        <tr>
                            <td>
                                <a class="ico-Primary scroll" title="Enrollments" asp-action="Index" asp-route-CourseID="@item.CourseID"><i class="fas fa-list"></i></a>
                            </td>
                            <td>
                                @item.CourseID
                            </td>
                            <td>
                                @item.Title
                            </td>
                            <td>
                                @item.Department.Name
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}
@if(Model.Enrollments != null)
{
    string CourseTitle = Model.Enrollments.First().Course.Title;
    <h3 class="mt-2"> Students Enrolled in: @CourseTitle</h3>
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Student
                    </th>
                    <th>
                        Grade
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Enrollments)
                {
                    <tr>
                        <td>@item.Student.FullNameAlt</td>
                        <td>@item.Grade</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}